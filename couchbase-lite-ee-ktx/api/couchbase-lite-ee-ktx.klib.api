// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <dev.kotbase:couchbase-lite-ee-ktx>
final class kotbase.ktx/DocumentBuilder : kotbase/MutableDictionaryInterface { // kotbase.ktx/DocumentBuilder|null[0]
    final val count // kotbase.ktx/DocumentBuilder.count|{}count[0]
        final fun <get-count>(): kotlin/Int // kotbase.ktx/DocumentBuilder.count.<get-count>|<get-count>(){}[0]
    final val keys // kotbase.ktx/DocumentBuilder.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/List<kotlin/String> // kotbase.ktx/DocumentBuilder.keys.<get-keys>|<get-keys>(){}[0]

    final fun (kotlin/String).to(kotlin/Any?) // kotbase.ktx/DocumentBuilder.to|to@kotlin.String(kotlin.Any?){}[0]
    final fun contains(kotlin/String): kotlin/Boolean // kotbase.ktx/DocumentBuilder.contains|contains(kotlin.String){}[0]
    final fun getArray(kotlin/String): kotbase/MutableArray? // kotbase.ktx/DocumentBuilder.getArray|getArray(kotlin.String){}[0]
    final fun getBlob(kotlin/String): kotbase/Blob? // kotbase.ktx/DocumentBuilder.getBlob|getBlob(kotlin.String){}[0]
    final fun getBoolean(kotlin/String): kotlin/Boolean // kotbase.ktx/DocumentBuilder.getBoolean|getBoolean(kotlin.String){}[0]
    final fun getDate(kotlin/String): kotlinx.datetime/Instant? // kotbase.ktx/DocumentBuilder.getDate|getDate(kotlin.String){}[0]
    final fun getDictionary(kotlin/String): kotbase/MutableDictionary? // kotbase.ktx/DocumentBuilder.getDictionary|getDictionary(kotlin.String){}[0]
    final fun getDouble(kotlin/String): kotlin/Double // kotbase.ktx/DocumentBuilder.getDouble|getDouble(kotlin.String){}[0]
    final fun getFloat(kotlin/String): kotlin/Float // kotbase.ktx/DocumentBuilder.getFloat|getFloat(kotlin.String){}[0]
    final fun getInt(kotlin/String): kotlin/Int // kotbase.ktx/DocumentBuilder.getInt|getInt(kotlin.String){}[0]
    final fun getLong(kotlin/String): kotlin/Long // kotbase.ktx/DocumentBuilder.getLong|getLong(kotlin.String){}[0]
    final fun getNumber(kotlin/String): kotlin/Number? // kotbase.ktx/DocumentBuilder.getNumber|getNumber(kotlin.String){}[0]
    final fun getString(kotlin/String): kotlin/String? // kotbase.ktx/DocumentBuilder.getString|getString(kotlin.String){}[0]
    final fun getValue(kotlin/String): kotlin/Any? // kotbase.ktx/DocumentBuilder.getValue|getValue(kotlin.String){}[0]
    final fun remove(kotlin/String): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.remove|remove(kotlin.String){}[0]
    final fun setArray(kotlin/String, kotbase/Array?): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setArray|setArray(kotlin.String;kotbase.Array?){}[0]
    final fun setBlob(kotlin/String, kotbase/Blob?): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setBlob|setBlob(kotlin.String;kotbase.Blob?){}[0]
    final fun setBoolean(kotlin/String, kotlin/Boolean): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setBoolean|setBoolean(kotlin.String;kotlin.Boolean){}[0]
    final fun setData(kotlin.collections/Map<kotlin/String, kotlin/Any?>): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setData|setData(kotlin.collections.Map<kotlin.String,kotlin.Any?>){}[0]
    final fun setDate(kotlin/String, kotlinx.datetime/Instant?): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setDate|setDate(kotlin.String;kotlinx.datetime.Instant?){}[0]
    final fun setDictionary(kotlin/String, kotbase/Dictionary?): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setDictionary|setDictionary(kotlin.String;kotbase.Dictionary?){}[0]
    final fun setDouble(kotlin/String, kotlin/Double): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setDouble|setDouble(kotlin.String;kotlin.Double){}[0]
    final fun setFloat(kotlin/String, kotlin/Float): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setFloat|setFloat(kotlin.String;kotlin.Float){}[0]
    final fun setInt(kotlin/String, kotlin/Int): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setInt|setInt(kotlin.String;kotlin.Int){}[0]
    final fun setJSON(kotlin/String): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setJSON|setJSON(kotlin.String){}[0]
    final fun setLong(kotlin/String, kotlin/Long): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setLong|setLong(kotlin.String;kotlin.Long){}[0]
    final fun setNumber(kotlin/String, kotlin/Number?): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setNumber|setNumber(kotlin.String;kotlin.Number?){}[0]
    final fun setString(kotlin/String, kotlin/String?): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setString|setString(kotlin.String;kotlin.String?){}[0]
    final fun setValue(kotlin/String, kotlin/Any?): kotbase/MutableDictionaryInterface // kotbase.ktx/DocumentBuilder.setValue|setValue(kotlin.String;kotlin.Any?){}[0]
    final fun toJSON(): kotlin/String // kotbase.ktx/DocumentBuilder.toJSON|toJSON(){}[0]
    final fun toMap(): kotlin.collections/Map<kotlin/String, kotlin/Any?> // kotbase.ktx/DocumentBuilder.toMap|toMap(){}[0]
}

final class kotbase.ktx/OrderByBuilder { // kotbase.ktx/OrderByBuilder|null[0]
    final fun (kotbase/Expression).ascending() // kotbase.ktx/OrderByBuilder.ascending|ascending@kotbase.Expression(){}[0]
    final fun (kotbase/Expression).descending() // kotbase.ktx/OrderByBuilder.descending|descending@kotbase.Expression(){}[0]
    final fun (kotlin/String).ascending() // kotbase.ktx/OrderByBuilder.ascending|ascending@kotlin.String(){}[0]
    final fun (kotlin/String).descending() // kotbase.ktx/OrderByBuilder.descending|descending@kotlin.String(){}[0]
}

final class kotbase.ktx/WhereBuilder { // kotbase.ktx/WhereBuilder|null[0]
    constructor <init>() // kotbase.ktx/WhereBuilder.<init>|<init>(){}[0]

    final fun (kotlin/String).equalTo(kotbase/Expression): kotbase/Expression // kotbase.ktx/WhereBuilder.equalTo|equalTo@kotlin.String(kotbase.Expression){}[0]
    final fun (kotlin/String).equalTo(kotlin.collections/List<kotlin/Any>): kotbase/Expression // kotbase.ktx/WhereBuilder.equalTo|equalTo@kotlin.String(kotlin.collections.List<kotlin.Any>){}[0]
    final fun (kotlin/String).equalTo(kotlin.collections/Map<kotlin/String, kotlin/Any?>): kotbase/Expression // kotbase.ktx/WhereBuilder.equalTo|equalTo@kotlin.String(kotlin.collections.Map<kotlin.String,kotlin.Any?>){}[0]
    final fun (kotlin/String).equalTo(kotlin/Boolean): kotbase/Expression // kotbase.ktx/WhereBuilder.equalTo|equalTo@kotlin.String(kotlin.Boolean){}[0]
    final fun (kotlin/String).equalTo(kotlin/Double): kotbase/Expression // kotbase.ktx/WhereBuilder.equalTo|equalTo@kotlin.String(kotlin.Double){}[0]
    final fun (kotlin/String).equalTo(kotlin/Float): kotbase/Expression // kotbase.ktx/WhereBuilder.equalTo|equalTo@kotlin.String(kotlin.Float){}[0]
    final fun (kotlin/String).equalTo(kotlin/Int): kotbase/Expression // kotbase.ktx/WhereBuilder.equalTo|equalTo@kotlin.String(kotlin.Int){}[0]
    final fun (kotlin/String).equalTo(kotlin/Long): kotbase/Expression // kotbase.ktx/WhereBuilder.equalTo|equalTo@kotlin.String(kotlin.Long){}[0]
    final fun (kotlin/String).equalTo(kotlin/String): kotbase/Expression // kotbase.ktx/WhereBuilder.equalTo|equalTo@kotlin.String(kotlin.String){}[0]
    final fun (kotlin/String).equalTo(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/WhereBuilder.equalTo|equalTo@kotlin.String(kotlinx.datetime.Instant){}[0]
    final fun (kotlin/String).greaterThan(kotbase/Expression): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThan|greaterThan@kotlin.String(kotbase.Expression){}[0]
    final fun (kotlin/String).greaterThan(kotlin/Boolean): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThan|greaterThan@kotlin.String(kotlin.Boolean){}[0]
    final fun (kotlin/String).greaterThan(kotlin/Double): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThan|greaterThan@kotlin.String(kotlin.Double){}[0]
    final fun (kotlin/String).greaterThan(kotlin/Float): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThan|greaterThan@kotlin.String(kotlin.Float){}[0]
    final fun (kotlin/String).greaterThan(kotlin/Int): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThan|greaterThan@kotlin.String(kotlin.Int){}[0]
    final fun (kotlin/String).greaterThan(kotlin/Long): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThan|greaterThan@kotlin.String(kotlin.Long){}[0]
    final fun (kotlin/String).greaterThan(kotlin/String): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThan|greaterThan@kotlin.String(kotlin.String){}[0]
    final fun (kotlin/String).greaterThan(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThan|greaterThan@kotlin.String(kotlinx.datetime.Instant){}[0]
    final fun (kotlin/String).greaterThanOrEqualTo(kotbase/Expression): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThanOrEqualTo|greaterThanOrEqualTo@kotlin.String(kotbase.Expression){}[0]
    final fun (kotlin/String).greaterThanOrEqualTo(kotlin/Boolean): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThanOrEqualTo|greaterThanOrEqualTo@kotlin.String(kotlin.Boolean){}[0]
    final fun (kotlin/String).greaterThanOrEqualTo(kotlin/Double): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThanOrEqualTo|greaterThanOrEqualTo@kotlin.String(kotlin.Double){}[0]
    final fun (kotlin/String).greaterThanOrEqualTo(kotlin/Float): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThanOrEqualTo|greaterThanOrEqualTo@kotlin.String(kotlin.Float){}[0]
    final fun (kotlin/String).greaterThanOrEqualTo(kotlin/Int): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThanOrEqualTo|greaterThanOrEqualTo@kotlin.String(kotlin.Int){}[0]
    final fun (kotlin/String).greaterThanOrEqualTo(kotlin/Long): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThanOrEqualTo|greaterThanOrEqualTo@kotlin.String(kotlin.Long){}[0]
    final fun (kotlin/String).greaterThanOrEqualTo(kotlin/String): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThanOrEqualTo|greaterThanOrEqualTo@kotlin.String(kotlin.String){}[0]
    final fun (kotlin/String).greaterThanOrEqualTo(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/WhereBuilder.greaterThanOrEqualTo|greaterThanOrEqualTo@kotlin.String(kotlinx.datetime.Instant){}[0]
    final fun (kotlin/String).lessThan(kotbase/Expression): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThan|lessThan@kotlin.String(kotbase.Expression){}[0]
    final fun (kotlin/String).lessThan(kotlin/Boolean): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThan|lessThan@kotlin.String(kotlin.Boolean){}[0]
    final fun (kotlin/String).lessThan(kotlin/Double): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThan|lessThan@kotlin.String(kotlin.Double){}[0]
    final fun (kotlin/String).lessThan(kotlin/Float): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThan|lessThan@kotlin.String(kotlin.Float){}[0]
    final fun (kotlin/String).lessThan(kotlin/Int): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThan|lessThan@kotlin.String(kotlin.Int){}[0]
    final fun (kotlin/String).lessThan(kotlin/Long): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThan|lessThan@kotlin.String(kotlin.Long){}[0]
    final fun (kotlin/String).lessThan(kotlin/String): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThan|lessThan@kotlin.String(kotlin.String){}[0]
    final fun (kotlin/String).lessThan(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThan|lessThan@kotlin.String(kotlinx.datetime.Instant){}[0]
    final fun (kotlin/String).lessThanOrEqualTo(kotbase/Expression): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThanOrEqualTo|lessThanOrEqualTo@kotlin.String(kotbase.Expression){}[0]
    final fun (kotlin/String).lessThanOrEqualTo(kotlin/Boolean): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThanOrEqualTo|lessThanOrEqualTo@kotlin.String(kotlin.Boolean){}[0]
    final fun (kotlin/String).lessThanOrEqualTo(kotlin/Double): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThanOrEqualTo|lessThanOrEqualTo@kotlin.String(kotlin.Double){}[0]
    final fun (kotlin/String).lessThanOrEqualTo(kotlin/Float): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThanOrEqualTo|lessThanOrEqualTo@kotlin.String(kotlin.Float){}[0]
    final fun (kotlin/String).lessThanOrEqualTo(kotlin/Int): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThanOrEqualTo|lessThanOrEqualTo@kotlin.String(kotlin.Int){}[0]
    final fun (kotlin/String).lessThanOrEqualTo(kotlin/Long): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThanOrEqualTo|lessThanOrEqualTo@kotlin.String(kotlin.Long){}[0]
    final fun (kotlin/String).lessThanOrEqualTo(kotlin/String): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThanOrEqualTo|lessThanOrEqualTo@kotlin.String(kotlin.String){}[0]
    final fun (kotlin/String).lessThanOrEqualTo(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/WhereBuilder.lessThanOrEqualTo|lessThanOrEqualTo@kotlin.String(kotlinx.datetime.Instant){}[0]
    final fun (kotlin/String).like(kotbase/Expression): kotbase/Expression // kotbase.ktx/WhereBuilder.like|like@kotlin.String(kotbase.Expression){}[0]
    final fun (kotlin/String).like(kotlin/Boolean): kotbase/Expression // kotbase.ktx/WhereBuilder.like|like@kotlin.String(kotlin.Boolean){}[0]
    final fun (kotlin/String).like(kotlin/Double): kotbase/Expression // kotbase.ktx/WhereBuilder.like|like@kotlin.String(kotlin.Double){}[0]
    final fun (kotlin/String).like(kotlin/Float): kotbase/Expression // kotbase.ktx/WhereBuilder.like|like@kotlin.String(kotlin.Float){}[0]
    final fun (kotlin/String).like(kotlin/Int): kotbase/Expression // kotbase.ktx/WhereBuilder.like|like@kotlin.String(kotlin.Int){}[0]
    final fun (kotlin/String).like(kotlin/Long): kotbase/Expression // kotbase.ktx/WhereBuilder.like|like@kotlin.String(kotlin.Long){}[0]
    final fun (kotlin/String).like(kotlin/String): kotbase/Expression // kotbase.ktx/WhereBuilder.like|like@kotlin.String(kotlin.String){}[0]
    final fun (kotlin/String).like(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/WhereBuilder.like|like@kotlin.String(kotlinx.datetime.Instant){}[0]
    final fun (kotlin/String).notEqualTo(kotbase/Expression): kotbase/Expression // kotbase.ktx/WhereBuilder.notEqualTo|notEqualTo@kotlin.String(kotbase.Expression){}[0]
    final fun (kotlin/String).notEqualTo(kotlin.collections/List<kotlin/Any>): kotbase/Expression // kotbase.ktx/WhereBuilder.notEqualTo|notEqualTo@kotlin.String(kotlin.collections.List<kotlin.Any>){}[0]
    final fun (kotlin/String).notEqualTo(kotlin.collections/Map<kotlin/String, kotlin/Any?>): kotbase/Expression // kotbase.ktx/WhereBuilder.notEqualTo|notEqualTo@kotlin.String(kotlin.collections.Map<kotlin.String,kotlin.Any?>){}[0]
    final fun (kotlin/String).notEqualTo(kotlin/Boolean): kotbase/Expression // kotbase.ktx/WhereBuilder.notEqualTo|notEqualTo@kotlin.String(kotlin.Boolean){}[0]
    final fun (kotlin/String).notEqualTo(kotlin/Double): kotbase/Expression // kotbase.ktx/WhereBuilder.notEqualTo|notEqualTo@kotlin.String(kotlin.Double){}[0]
    final fun (kotlin/String).notEqualTo(kotlin/Float): kotbase/Expression // kotbase.ktx/WhereBuilder.notEqualTo|notEqualTo@kotlin.String(kotlin.Float){}[0]
    final fun (kotlin/String).notEqualTo(kotlin/Int): kotbase/Expression // kotbase.ktx/WhereBuilder.notEqualTo|notEqualTo@kotlin.String(kotlin.Int){}[0]
    final fun (kotlin/String).notEqualTo(kotlin/Long): kotbase/Expression // kotbase.ktx/WhereBuilder.notEqualTo|notEqualTo@kotlin.String(kotlin.Long){}[0]
    final fun (kotlin/String).notEqualTo(kotlin/String): kotbase/Expression // kotbase.ktx/WhereBuilder.notEqualTo|notEqualTo@kotlin.String(kotlin.String){}[0]
    final fun (kotlin/String).notEqualTo(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/WhereBuilder.notEqualTo|notEqualTo@kotlin.String(kotlinx.datetime.Instant){}[0]
}

final fun (kotbase/Collection).kotbase.ktx/as(kotlin/String): kotbase/DataSource // kotbase.ktx/as|as@kotbase.Collection(kotlin.String){}[0]
final fun (kotbase/Collection).kotbase.ktx/documentFlow(kotlin/String, kotlin.coroutines/CoroutineContext = ...): kotlinx.coroutines.flow/Flow<kotbase/Document?> // kotbase.ktx/documentFlow|documentFlow@kotbase.Collection(kotlin.String;kotlin.coroutines.CoroutineContext){}[0]
final fun (kotbase/Database).kotbase.ktx/as(kotlin/String): kotbase/DataSource // kotbase.ktx/as|as@kotbase.Database(kotlin.String){}[0]
final fun (kotbase/Database).kotbase.ktx/documentFlow(kotlin/String): kotlinx.coroutines.flow/Flow<kotbase/Document?> // kotbase.ktx/documentFlow|documentFlow@kotbase.Database(kotlin.String){}[0]
final fun (kotbase/Database).kotbase.ktx/documentFlow(kotlin/String, kotlin.coroutines/CoroutineContext): kotlinx.coroutines.flow/Flow<kotbase/Document?> // kotbase.ktx/documentFlow|documentFlow@kotbase.Database(kotlin.String;kotlin.coroutines.CoroutineContext){}[0]
final fun (kotbase/Expression).kotbase.ktx/as(kotlin/String): kotbase/SelectResult.As // kotbase.ktx/as|as@kotbase.Expression(kotlin.String){}[0]
final fun (kotbase/Expression).kotbase.ktx/div(kotbase/Expression): kotbase/Expression // kotbase.ktx/div|div@kotbase.Expression(kotbase.Expression){}[0]
final fun (kotbase/Expression).kotbase.ktx/div(kotlin/Double): kotbase/Expression // kotbase.ktx/div|div@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/div(kotlin/Float): kotbase/Expression // kotbase.ktx/div|div@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/div(kotlin/Int): kotbase/Expression // kotbase.ktx/div|div@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/div(kotlin/Long): kotbase/Expression // kotbase.ktx/div|div@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/Expression).kotbase.ktx/equalTo(kotlin.collections/List<kotlin/Any>): kotbase/Expression // kotbase.ktx/equalTo|equalTo@kotbase.Expression(kotlin.collections.List<kotlin.Any>){}[0]
final fun (kotbase/Expression).kotbase.ktx/equalTo(kotlin.collections/Map<kotlin/String, kotlin/Any?>): kotbase/Expression // kotbase.ktx/equalTo|equalTo@kotbase.Expression(kotlin.collections.Map<kotlin.String,kotlin.Any?>){}[0]
final fun (kotbase/Expression).kotbase.ktx/equalTo(kotlin/Boolean): kotbase/Expression // kotbase.ktx/equalTo|equalTo@kotbase.Expression(kotlin.Boolean){}[0]
final fun (kotbase/Expression).kotbase.ktx/equalTo(kotlin/Double): kotbase/Expression // kotbase.ktx/equalTo|equalTo@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/equalTo(kotlin/Float): kotbase/Expression // kotbase.ktx/equalTo|equalTo@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/equalTo(kotlin/Int): kotbase/Expression // kotbase.ktx/equalTo|equalTo@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/equalTo(kotlin/Long): kotbase/Expression // kotbase.ktx/equalTo|equalTo@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/Expression).kotbase.ktx/equalTo(kotlin/String): kotbase/Expression // kotbase.ktx/equalTo|equalTo@kotbase.Expression(kotlin.String){}[0]
final fun (kotbase/Expression).kotbase.ktx/equalTo(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/equalTo|equalTo@kotbase.Expression(kotlinx.datetime.Instant){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThan(kotlin/Boolean): kotbase/Expression // kotbase.ktx/greaterThan|greaterThan@kotbase.Expression(kotlin.Boolean){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThan(kotlin/Double): kotbase/Expression // kotbase.ktx/greaterThan|greaterThan@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThan(kotlin/Float): kotbase/Expression // kotbase.ktx/greaterThan|greaterThan@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThan(kotlin/Int): kotbase/Expression // kotbase.ktx/greaterThan|greaterThan@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThan(kotlin/Long): kotbase/Expression // kotbase.ktx/greaterThan|greaterThan@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThan(kotlin/String): kotbase/Expression // kotbase.ktx/greaterThan|greaterThan@kotbase.Expression(kotlin.String){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThan(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/greaterThan|greaterThan@kotbase.Expression(kotlinx.datetime.Instant){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThanOrEqualTo(kotlin/Boolean): kotbase/Expression // kotbase.ktx/greaterThanOrEqualTo|greaterThanOrEqualTo@kotbase.Expression(kotlin.Boolean){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThanOrEqualTo(kotlin/Double): kotbase/Expression // kotbase.ktx/greaterThanOrEqualTo|greaterThanOrEqualTo@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThanOrEqualTo(kotlin/Float): kotbase/Expression // kotbase.ktx/greaterThanOrEqualTo|greaterThanOrEqualTo@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThanOrEqualTo(kotlin/Int): kotbase/Expression // kotbase.ktx/greaterThanOrEqualTo|greaterThanOrEqualTo@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThanOrEqualTo(kotlin/Long): kotbase/Expression // kotbase.ktx/greaterThanOrEqualTo|greaterThanOrEqualTo@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThanOrEqualTo(kotlin/String): kotbase/Expression // kotbase.ktx/greaterThanOrEqualTo|greaterThanOrEqualTo@kotbase.Expression(kotlin.String){}[0]
final fun (kotbase/Expression).kotbase.ktx/greaterThanOrEqualTo(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/greaterThanOrEqualTo|greaterThanOrEqualTo@kotbase.Expression(kotlinx.datetime.Instant){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThan(kotlin/Boolean): kotbase/Expression // kotbase.ktx/lessThan|lessThan@kotbase.Expression(kotlin.Boolean){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThan(kotlin/Double): kotbase/Expression // kotbase.ktx/lessThan|lessThan@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThan(kotlin/Float): kotbase/Expression // kotbase.ktx/lessThan|lessThan@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThan(kotlin/Int): kotbase/Expression // kotbase.ktx/lessThan|lessThan@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThan(kotlin/Long): kotbase/Expression // kotbase.ktx/lessThan|lessThan@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThan(kotlin/String): kotbase/Expression // kotbase.ktx/lessThan|lessThan@kotbase.Expression(kotlin.String){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThan(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/lessThan|lessThan@kotbase.Expression(kotlinx.datetime.Instant){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThanOrEqualTo(kotlin/Boolean): kotbase/Expression // kotbase.ktx/lessThanOrEqualTo|lessThanOrEqualTo@kotbase.Expression(kotlin.Boolean){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThanOrEqualTo(kotlin/Double): kotbase/Expression // kotbase.ktx/lessThanOrEqualTo|lessThanOrEqualTo@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThanOrEqualTo(kotlin/Float): kotbase/Expression // kotbase.ktx/lessThanOrEqualTo|lessThanOrEqualTo@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThanOrEqualTo(kotlin/Int): kotbase/Expression // kotbase.ktx/lessThanOrEqualTo|lessThanOrEqualTo@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThanOrEqualTo(kotlin/Long): kotbase/Expression // kotbase.ktx/lessThanOrEqualTo|lessThanOrEqualTo@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThanOrEqualTo(kotlin/String): kotbase/Expression // kotbase.ktx/lessThanOrEqualTo|lessThanOrEqualTo@kotbase.Expression(kotlin.String){}[0]
final fun (kotbase/Expression).kotbase.ktx/lessThanOrEqualTo(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/lessThanOrEqualTo|lessThanOrEqualTo@kotbase.Expression(kotlinx.datetime.Instant){}[0]
final fun (kotbase/Expression).kotbase.ktx/like(kotlin/Boolean): kotbase/Expression // kotbase.ktx/like|like@kotbase.Expression(kotlin.Boolean){}[0]
final fun (kotbase/Expression).kotbase.ktx/like(kotlin/Double): kotbase/Expression // kotbase.ktx/like|like@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/like(kotlin/Float): kotbase/Expression // kotbase.ktx/like|like@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/like(kotlin/Int): kotbase/Expression // kotbase.ktx/like|like@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/like(kotlin/Long): kotbase/Expression // kotbase.ktx/like|like@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/Expression).kotbase.ktx/like(kotlin/String): kotbase/Expression // kotbase.ktx/like|like@kotbase.Expression(kotlin.String){}[0]
final fun (kotbase/Expression).kotbase.ktx/like(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/like|like@kotbase.Expression(kotlinx.datetime.Instant){}[0]
final fun (kotbase/Expression).kotbase.ktx/minus(kotbase/Expression): kotbase/Expression // kotbase.ktx/minus|minus@kotbase.Expression(kotbase.Expression){}[0]
final fun (kotbase/Expression).kotbase.ktx/minus(kotlin/Double): kotbase/Expression // kotbase.ktx/minus|minus@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/minus(kotlin/Float): kotbase/Expression // kotbase.ktx/minus|minus@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/minus(kotlin/Int): kotbase/Expression // kotbase.ktx/minus|minus@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/minus(kotlin/Long): kotbase/Expression // kotbase.ktx/minus|minus@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/Expression).kotbase.ktx/notEqualTo(kotlin.collections/List<kotlin/Any>): kotbase/Expression // kotbase.ktx/notEqualTo|notEqualTo@kotbase.Expression(kotlin.collections.List<kotlin.Any>){}[0]
final fun (kotbase/Expression).kotbase.ktx/notEqualTo(kotlin.collections/Map<kotlin/String, kotlin/Any?>): kotbase/Expression // kotbase.ktx/notEqualTo|notEqualTo@kotbase.Expression(kotlin.collections.Map<kotlin.String,kotlin.Any?>){}[0]
final fun (kotbase/Expression).kotbase.ktx/notEqualTo(kotlin/Boolean): kotbase/Expression // kotbase.ktx/notEqualTo|notEqualTo@kotbase.Expression(kotlin.Boolean){}[0]
final fun (kotbase/Expression).kotbase.ktx/notEqualTo(kotlin/Double): kotbase/Expression // kotbase.ktx/notEqualTo|notEqualTo@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/notEqualTo(kotlin/Float): kotbase/Expression // kotbase.ktx/notEqualTo|notEqualTo@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/notEqualTo(kotlin/Int): kotbase/Expression // kotbase.ktx/notEqualTo|notEqualTo@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/notEqualTo(kotlin/Long): kotbase/Expression // kotbase.ktx/notEqualTo|notEqualTo@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/Expression).kotbase.ktx/notEqualTo(kotlin/String): kotbase/Expression // kotbase.ktx/notEqualTo|notEqualTo@kotbase.Expression(kotlin.String){}[0]
final fun (kotbase/Expression).kotbase.ktx/notEqualTo(kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/notEqualTo|notEqualTo@kotbase.Expression(kotlinx.datetime.Instant){}[0]
final fun (kotbase/Expression).kotbase.ktx/plus(kotbase/Expression): kotbase/Expression // kotbase.ktx/plus|plus@kotbase.Expression(kotbase.Expression){}[0]
final fun (kotbase/Expression).kotbase.ktx/plus(kotlin/Double): kotbase/Expression // kotbase.ktx/plus|plus@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/plus(kotlin/Float): kotbase/Expression // kotbase.ktx/plus|plus@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/plus(kotlin/Int): kotbase/Expression // kotbase.ktx/plus|plus@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/plus(kotlin/Long): kotbase/Expression // kotbase.ktx/plus|plus@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/Expression).kotbase.ktx/rem(kotbase/Expression): kotbase/Expression // kotbase.ktx/rem|rem@kotbase.Expression(kotbase.Expression){}[0]
final fun (kotbase/Expression).kotbase.ktx/rem(kotlin/Double): kotbase/Expression // kotbase.ktx/rem|rem@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/rem(kotlin/Float): kotbase/Expression // kotbase.ktx/rem|rem@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/rem(kotlin/Int): kotbase/Expression // kotbase.ktx/rem|rem@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/rem(kotlin/Long): kotbase/Expression // kotbase.ktx/rem|rem@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/Expression).kotbase.ktx/times(kotbase/Expression): kotbase/Expression // kotbase.ktx/times|times@kotbase.Expression(kotbase.Expression){}[0]
final fun (kotbase/Expression).kotbase.ktx/times(kotlin/Double): kotbase/Expression // kotbase.ktx/times|times@kotbase.Expression(kotlin.Double){}[0]
final fun (kotbase/Expression).kotbase.ktx/times(kotlin/Float): kotbase/Expression // kotbase.ktx/times|times@kotbase.Expression(kotlin.Float){}[0]
final fun (kotbase/Expression).kotbase.ktx/times(kotlin/Int): kotbase/Expression // kotbase.ktx/times|times@kotbase.Expression(kotlin.Int){}[0]
final fun (kotbase/Expression).kotbase.ktx/times(kotlin/Long): kotbase/Expression // kotbase.ktx/times|times@kotbase.Expression(kotlin.Long){}[0]
final fun (kotbase/FromRouter).kotbase.ktx/from(kotbase/Collection): kotbase/From // kotbase.ktx/from|from@kotbase.FromRouter(kotbase.Collection){}[0]
final fun (kotbase/FromRouter).kotbase.ktx/from(kotbase/Database): kotbase/From // kotbase.ktx/from|from@kotbase.FromRouter(kotbase.Database){}[0]
final fun (kotbase/GroupByRouter).kotbase.ktx/groupBy(kotlin/Array<out kotlin/String>...): kotbase/GroupBy // kotbase.ktx/groupBy|groupBy@kotbase.GroupByRouter(kotlin.Array<out|kotlin.String>...){}[0]
final fun (kotbase/LimitRouter).kotbase.ktx/limit(kotlin/Int, kotlin/Int? = ...): kotbase/Limit // kotbase.ktx/limit|limit@kotbase.LimitRouter(kotlin.Int;kotlin.Int?){}[0]
final fun (kotbase/OrderByRouter).kotbase.ktx/orderBy(kotlin/Function1<kotbase.ktx/OrderByBuilder, kotlin/Unit>): kotbase/OrderBy // kotbase.ktx/orderBy|orderBy@kotbase.OrderByRouter(kotlin.Function1<kotbase.ktx.OrderByBuilder,kotlin.Unit>){}[0]
final fun (kotbase/Query).kotbase.ktx/asFlow(kotlin.coroutines/CoroutineContext? = ...): kotlinx.coroutines.flow/Flow<kotbase/ResultSet> // kotbase.ktx/asFlow|asFlow@kotbase.Query(kotlin.coroutines.CoroutineContext?){}[0]
final fun (kotbase/WhereRouter).kotbase.ktx/where(kotlin/Function1<kotbase.ktx/WhereBuilder, kotbase/Expression>): kotbase/Where // kotbase.ktx/where|where@kotbase.WhereRouter(kotlin.Function1<kotbase.ktx.WhereBuilder,kotbase.Expression>){}[0]
final fun (kotlin/String).kotbase.ktx/from(kotlin/String): kotbase/Expression // kotbase.ktx/from|from@kotlin.String(kotlin.String){}[0]
final fun <#A: kotlin/Any> (kotbase/Query).kotbase.ktx/asObjectsFlow(kotlin.coroutines/CoroutineContext?, kotlin/Function1<kotlin.collections/Map<kotlin/String, kotlin/Any?>, #A?>): kotlinx.coroutines.flow/Flow<kotlin.collections/List<#A>> // kotbase.ktx/asObjectsFlow|asObjectsFlow@kotbase.Query(kotlin.coroutines.CoroutineContext?;kotlin.Function1<kotlin.collections.Map<kotlin.String,kotlin.Any?>,0:0?>){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (kotbase/Query).kotbase.ktx/asObjectsFlow(kotlin.coroutines/CoroutineContext?, kotlin/Function1<kotlin.collections/Map<kotlin/String, kotlin/Any?>, #A?>, kotlin/Int, kotlin/Any?): kotlinx.coroutines.flow/Flow<kotlin.collections/List<#A>> // kotbase.ktx/asObjectsFlow|asObjectsFlow@kotbase.Query(kotlin.coroutines.CoroutineContext?;kotlin.Function1<kotlin.collections.Map<kotlin.String,kotlin.Any?>,0:0?>;kotlin.Int;kotlin.Any?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (kotbase/Query).kotbase.ktx/asObjectsFlow(kotlin.coroutines/CoroutineContext?, kotlin/Function1<kotlin/String, #A?>): kotlinx.coroutines.flow/Flow<kotlin.collections/List<#A>> // kotbase.ktx/asObjectsFlow|asObjectsFlow@kotbase.Query(kotlin.coroutines.CoroutineContext?;kotlin.Function1<kotlin.String,0:0?>){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (kotbase/Query).kotbase.ktx/asObjectsFlow(kotlin.coroutines/CoroutineContext?, kotlin/Function1<kotlin/String, #A?>, kotlin/Int, kotlin/Any?): kotlinx.coroutines.flow/Flow<kotlin.collections/List<#A>> // kotbase.ktx/asObjectsFlow|asObjectsFlow@kotbase.Query(kotlin.coroutines.CoroutineContext?;kotlin.Function1<kotlin.String,0:0?>;kotlin.Int;kotlin.Any?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (kotbase/Query).kotbase.ktx/asObjectsFlow(kotlin/Function1<kotlin.collections/Map<kotlin/String, kotlin/Any?>, #A?>): kotlinx.coroutines.flow/Flow<kotlin.collections/List<#A>> // kotbase.ktx/asObjectsFlow|asObjectsFlow@kotbase.Query(kotlin.Function1<kotlin.collections.Map<kotlin.String,kotlin.Any?>,0:0?>){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (kotbase/Query).kotbase.ktx/asObjectsFlow(kotlin/Function1<kotlin/String, #A?>): kotlinx.coroutines.flow/Flow<kotlin.collections/List<#A>> // kotbase.ktx/asObjectsFlow|asObjectsFlow@kotbase.Query(kotlin.Function1<kotlin.String,0:0?>){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (kotlinx.coroutines.flow/Flow<kotbase/QueryChange>).kotbase.ktx/mapToObjects(kotlin/Function1<kotlin.collections/Map<kotlin/String, kotlin/Any?>, #A?>): kotlinx.coroutines.flow/Flow<kotlin.collections/List<#A>> // kotbase.ktx/mapToObjects|mapToObjects@kotlinx.coroutines.flow.Flow<kotbase.QueryChange>(kotlin.Function1<kotlin.collections.Map<kotlin.String,kotlin.Any?>,0:0?>){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (kotlinx.coroutines.flow/Flow<kotbase/QueryChange>).kotbase.ktx/mapToObjects(kotlin/Function1<kotlin/String, #A?>): kotlinx.coroutines.flow/Flow<kotlin.collections/List<#A>> // kotbase.ktx/mapToObjects|mapToObjects@kotlinx.coroutines.flow.Flow<kotbase.QueryChange>(kotlin.Function1<kotlin.String,0:0?>){0§<kotlin.Any>}[0]
final fun kotbase.ktx/MutableDocument(kotlin/Function1<kotbase.ktx/DocumentBuilder, kotlin/Unit>): kotbase/MutableDocument // kotbase.ktx/MutableDocument|MutableDocument(kotlin.Function1<kotbase.ktx.DocumentBuilder,kotlin.Unit>){}[0]
final fun kotbase.ktx/MutableDocument(kotlin/String?, kotlin/Function1<kotbase.ktx/DocumentBuilder, kotlin/Unit>): kotbase/MutableDocument // kotbase.ktx/MutableDocument|MutableDocument(kotlin.String?;kotlin.Function1<kotbase.ktx.DocumentBuilder,kotlin.Unit>){}[0]
final fun kotbase.ktx/all(): kotbase/SelectResult.From // kotbase.ktx/all|all(){}[0]
final fun kotbase.ktx/fullTextIndex(kotlin/Array<out kotlin/String>...): kotbase/FullTextIndex // kotbase.ktx/fullTextIndex|fullTextIndex(kotlin.Array<out|kotlin.String>...){}[0]
final fun kotbase.ktx/mutableArrayOf(kotlin/Array<out kotlin/Any?>...): kotbase/MutableArray // kotbase.ktx/mutableArrayOf|mutableArrayOf(kotlin.Array<out|kotlin.Any?>...){}[0]
final fun kotbase.ktx/mutableDictOf(kotlin/Array<out kotlin/Pair<kotlin/String, kotlin/Any?>>...): kotbase/MutableDictionary // kotbase.ktx/mutableDictOf|mutableDictOf(kotlin.Array<out|kotlin.Pair<kotlin.String,kotlin.Any?>>...){}[0]
final fun kotbase.ktx/mutableDocOf(kotlin/Array<out kotlin/Pair<kotlin/String, kotlin/Any?>>...): kotbase/MutableDocument // kotbase.ktx/mutableDocOf|mutableDocOf(kotlin.Array<out|kotlin.Pair<kotlin.String,kotlin.Any?>>...){}[0]
final fun kotbase.ktx/mutableDocOf(kotlin/String?, kotlin/Array<out kotlin/Pair<kotlin/String, kotlin/Any?>>...): kotbase/MutableDocument // kotbase.ktx/mutableDocOf|mutableDocOf(kotlin.String?;kotlin.Array<out|kotlin.Pair<kotlin.String,kotlin.Any?>>...){}[0]
final fun kotbase.ktx/not(kotbase/Expression): kotbase/Expression // kotbase.ktx/not|not(kotbase.Expression){}[0]
final fun kotbase.ktx/property(kotlin/String): kotbase/PropertyExpression // kotbase.ktx/property|property(kotlin.String){}[0]
final fun kotbase.ktx/select(kotbase/Expression, kotbase/SelectResult, kotlin/Array<out kotbase/SelectResult>...): kotbase/Select // kotbase.ktx/select|select(kotbase.Expression;kotbase.SelectResult;kotlin.Array<out|kotbase.SelectResult>...){}[0]
final fun kotbase.ktx/select(kotbase/Expression, kotlin/Array<out kotbase/Expression>...): kotbase/Select // kotbase.ktx/select|select(kotbase.Expression;kotlin.Array<out|kotbase.Expression>...){}[0]
final fun kotbase.ktx/select(kotbase/Expression, kotlin/String, kotlin/Array<out kotlin/String>...): kotbase/Select // kotbase.ktx/select|select(kotbase.Expression;kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final fun kotbase.ktx/select(kotlin/Array<out kotbase/SelectResult>...): kotbase/Select // kotbase.ktx/select|select(kotlin.Array<out|kotbase.SelectResult>...){}[0]
final fun kotbase.ktx/select(kotlin/Array<out kotlin/String>...): kotbase/Select // kotbase.ktx/select|select(kotlin.Array<out|kotlin.String>...){}[0]
final fun kotbase.ktx/selectCount(kotlin/String = ...): kotbase/Select // kotbase.ktx/selectCount|selectCount(kotlin.String){}[0]
final fun kotbase.ktx/selectDistinct(kotbase/Expression, kotbase/SelectResult, kotlin/Array<out kotbase/SelectResult>...): kotbase/Select // kotbase.ktx/selectDistinct|selectDistinct(kotbase.Expression;kotbase.SelectResult;kotlin.Array<out|kotbase.SelectResult>...){}[0]
final fun kotbase.ktx/selectDistinct(kotbase/Expression, kotlin/Array<out kotbase/Expression>...): kotbase/Select // kotbase.ktx/selectDistinct|selectDistinct(kotbase.Expression;kotlin.Array<out|kotbase.Expression>...){}[0]
final fun kotbase.ktx/selectDistinct(kotbase/Expression, kotlin/String, kotlin/Array<out kotlin/String>...): kotbase/Select // kotbase.ktx/selectDistinct|selectDistinct(kotbase.Expression;kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final fun kotbase.ktx/selectDistinct(kotlin/Array<out kotbase/SelectResult>...): kotbase/Select // kotbase.ktx/selectDistinct|selectDistinct(kotlin.Array<out|kotbase.SelectResult>...){}[0]
final fun kotbase.ktx/selectDistinct(kotlin/Array<out kotlin/String>...): kotbase/Select // kotbase.ktx/selectDistinct|selectDistinct(kotlin.Array<out|kotlin.String>...){}[0]
final fun kotbase.ktx/valueIndex(kotlin/Array<out kotlin/String>...): kotbase/ValueIndex // kotbase.ktx/valueIndex|valueIndex(kotlin.Array<out|kotlin.String>...){}[0]
final inline fun (kotbase/Expression).kotbase.ktx/between(kotlinx.datetime/Instant, kotlinx.datetime/Instant): kotbase/Expression // kotbase.ktx/between|between@kotbase.Expression(kotlinx.datetime.Instant;kotlinx.datetime.Instant){}[0]
final inline fun (kotbase/Expression).kotbase.ktx/contains(kotlin/String): kotbase/Expression // kotbase.ktx/contains|contains@kotbase.Expression(kotlin.String){}[0]
final inline fun (kotbase/Expression).kotbase.ktx/notContains(kotlin/String): kotbase/Expression // kotbase.ktx/notContains|notContains@kotbase.Expression(kotlin.String){}[0]
final inline fun (kotbase/ResultSet).kotbase.ktx/countResult(): kotlin/Long // kotbase.ktx/countResult|countResult@kotbase.ResultSet(){}[0]
final inline fun <#A: kotlin/Any> (kotbase/ResultSet).kotbase.ktx/toObjects(kotlin/Function1<kotlin.collections/Map<kotlin/String, kotlin/Any?>, #A?>): kotlin.collections/List<#A> // kotbase.ktx/toObjects|toObjects@kotbase.ResultSet(kotlin.Function1<kotlin.collections.Map<kotlin.String,kotlin.Any?>,0:0?>){0§<kotlin.Any>}[0]
final inline fun <#A: kotlin/Any> (kotbase/ResultSet).kotbase.ktx/toObjects(kotlin/Function1<kotlin/String, #A?>): kotlin.collections/List<#A> // kotbase.ktx/toObjects|toObjects@kotbase.ResultSet(kotlin.Function1<kotlin.String,0:0?>){0§<kotlin.Any>}[0]
